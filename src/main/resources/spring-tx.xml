<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入外部的属性文件 -->
    <context:property-placeholder location="classpath*:application.properties" />

    <!-- 引入c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- >>>>>>>>>> 无事物管理配置 start <<<<<<<<<< -->
<!--    <bean id="accountService" class="com.hnayyc.imooc.spring.tx.AccountServiceImpl" >-->
<!--        <property name="accountDao" ref="accountDao" />-->
<!--    </bean>-->
<!--    <bean id="accountDao" class="com.hnayyc.imooc.spring.tx.AccountDaoImpl" >-->
        <!-- AccountDaoImpl继承JdbcDaoSupport，从JdbcDaoSupport源码可看到其包含private JdbcTemplate属性，
             而且还包括public final void setDataSource(DataSource dataSource)方法，所以可以通过注入dataSource
             的方式实现。
             TODO: 参见视频4-1转账环境搭建第15分钟。-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--    </bean>-->
<!---->
    <!-- 给AccountDao注入JdbcTemplate的第二种方法 -->
<!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->
<!--    <bean id="accountDao" class="com.hnayyc.imooc.spring.tx.AccountDaoImpl">-->
<!--        <property name="jdbcTemplate" ref="jdbcTemplate" />-->
<!--    </bean>-->
    <!-- >>>>>>>>>> 无事物管理配置 end <<<<<<<<<< -->

    <!-- >>>>>>>>>> Spring编程式事务管理 start <<<<<<<<<< -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    <bean id="accountService" class="com.hnayyc.imooc.spring.tx.AccountServiceImpl">
        <property name="accountDao" ref="accountDao" />
        <property name="transactionTemplate" ref="transactionTemplate" />
    </bean>
    <bean id="accountDao" class="com.hnayyc.imooc.spring.tx.AccountDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- >>>>>>>>>> Spring编程式事务管理 end <<<<<<<<<< -->
</beans>